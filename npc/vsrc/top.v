// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifdef RANDOMIZE_REG_INIT
  `define RANDOMIZE
`endif // RANDOMIZE_REG_INIT

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifdef RANDOMIZE
  `ifdef VERILATOR
    `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
  `else  // VERILATOR
    `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
  `endif // VERILATOR
`else  // RANDOMIZE
  `define INIT_RANDOM_PROLOG_
`endif // RANDOMIZE

module IFU(	// <stdin>:2:10
  input         clock,
                reset,
  input  [63:0] io_IF_npc,
  output [63:0] io_IF_pc);

  reg [63:0] pcReg;	// IFU.scala:9:24
  always @(posedge clock) begin
    if (reset)
      pcReg <= 64'h80000000;	// IFU.scala:9:24
    else
      pcReg <= io_IF_npc;	// IFU.scala:9:24
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:2:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:2:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:2:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:2:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:2:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:2:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:2:10
        `INIT_RANDOM_PROLOG_	// <stdin>:2:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:2:10
        _RANDOM_0 = `RANDOM;	// <stdin>:2:10
        _RANDOM_1 = `RANDOM;	// <stdin>:2:10
        pcReg = {_RANDOM_0, _RANDOM_1};	// IFU.scala:9:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:2:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:2:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_IF_pc = pcReg;	// <stdin>:2:10, IFU.scala:9:24
endmodule

module IDU(	// <stdin>:12:10
  input         clock,
                reset,
  input  [31:0] io_IF_Inst,
  input  [63:0] io_IF_pc,
                io_EX_RegWriteData,
  input  [4:0]  io_EX_RegWriteID,
  input         io_EX_RegWriteEn,
  output [63:0] io_ID_npc,
                io_ID_ALU_Data1,
                io_ID_ALU_Data2,
  output        io_ID_FuType,
  output [4:0]  io_ID_optype,
  output [63:0] io_ID_Rs2Data,
  output [4:0]  io_ID_RegWriteID,
  output        io_ID_RegWriteEn,
                io_ID_MemWriteEn,
                io_ID_MemReadEn,
  output [63:0] io_ID_GPR_0,
                io_ID_GPR_1,
                io_ID_GPR_2,
                io_ID_GPR_3,
                io_ID_GPR_4,
                io_ID_GPR_5,
                io_ID_GPR_6,
                io_ID_GPR_7,
                io_ID_GPR_8,
                io_ID_GPR_9,
                io_ID_GPR_10,
                io_ID_GPR_11,
                io_ID_GPR_12,
                io_ID_GPR_13,
                io_ID_GPR_14,
                io_ID_GPR_15,
                io_ID_GPR_16,
                io_ID_GPR_17,
                io_ID_GPR_18,
                io_ID_GPR_19,
                io_ID_GPR_20,
                io_ID_GPR_21,
                io_ID_GPR_22,
                io_ID_GPR_23,
                io_ID_GPR_24,
                io_ID_GPR_25,
                io_ID_GPR_26,
                io_ID_GPR_27,
                io_ID_GPR_28,
                io_ID_GPR_29,
                io_ID_GPR_30,
                io_ID_GPR_31,
  output        io_ID_unknown_inst);

  wire              _InstInfo_T_1 = io_IF_Inst == 32'h100073;	// Lookup.scala:31:38
  wire              _InstInfo_T_3 = io_IF_Inst[6:0] == 7'h17;	// Lookup.scala:31:38
  wire              _InstInfo_T_5 = io_IF_Inst[6:0] == 7'h37;	// Lookup.scala:31:38
  wire [9:0]        _GEN = {io_IF_Inst[14:12], io_IF_Inst[6:0]};	// Lookup.scala:31:38
  wire              _InstInfo_T_7 = _GEN == 10'h13;	// Lookup.scala:31:38
  wire [15:0]       _GEN_0 = {io_IF_Inst[31:26], io_IF_Inst[14:12], io_IF_Inst[6:0]};	// Lookup.scala:31:38
  wire              _InstInfo_T_9 = _GEN_0 == 16'h93;	// Lookup.scala:31:38
  wire              _InstInfo_T_11 = _GEN_0 == 16'h293;	// Lookup.scala:31:38
  wire              _InstInfo_T_13 = _GEN_0 == 16'h4293;	// Lookup.scala:31:38
  wire              _InstInfo_T_15 = _GEN == 10'h67;	// Lookup.scala:31:38
  wire              _InstInfo_T_17 = _GEN == 10'h213;	// Lookup.scala:31:38
  wire              _InstInfo_T_19 = _GEN == 10'h313;	// Lookup.scala:31:38
  wire              _InstInfo_T_21 = _GEN == 10'h393;	// Lookup.scala:31:38
  wire              _InstInfo_T_23 = _GEN == 10'h113;	// Lookup.scala:31:38
  wire              _InstInfo_T_25 = _GEN == 10'h193;	// Lookup.scala:31:38
  wire              _InstInfo_T_27 = _GEN == 10'h1B;	// Lookup.scala:31:38
  wire [16:0]       _GEN_1 = {io_IF_Inst[31:25], io_IF_Inst[14:12], io_IF_Inst[6:0]};	// Lookup.scala:31:38
  wire              _InstInfo_T_29 = _GEN_1 == 17'h9B;	// Lookup.scala:31:38
  wire              _InstInfo_T_31 = _GEN_1 == 17'h29B;	// Lookup.scala:31:38
  wire              _InstInfo_T_33 = _GEN_1 == 17'h829B;	// Lookup.scala:31:38
  wire              _InstInfo_T_35 = _GEN == 10'h3;	// Lookup.scala:31:38
  wire              _InstInfo_T_37 = _GEN == 10'h83;	// Lookup.scala:31:38
  wire              _InstInfo_T_39 = _GEN == 10'h103;	// Lookup.scala:31:38
  wire              _InstInfo_T_41 = _GEN == 10'h183;	// Lookup.scala:31:38
  wire              _InstInfo_T_43 = _GEN == 10'h203;	// Lookup.scala:31:38
  wire              _InstInfo_T_45 = _GEN == 10'h283;	// Lookup.scala:31:38
  wire              _InstInfo_T_47 = _GEN == 10'h303;	// Lookup.scala:31:38
  wire              _InstInfo_T_49 = _GEN == 10'h1A3;	// Lookup.scala:31:38
  wire              _InstInfo_T_51 = _GEN == 10'h123;	// Lookup.scala:31:38
  wire              _InstInfo_T_53 = _GEN == 10'hA3;	// Lookup.scala:31:38
  wire              _InstInfo_T_203 = _GEN == 10'h23;	// Lookup.scala:31:38
  wire              _InstInfo_T_57 = _GEN_1 == 17'h33;	// Lookup.scala:31:38
  wire              _InstInfo_T_59 = _GEN_1 == 17'hB3;	// Lookup.scala:31:38
  wire              _InstInfo_T_61 = _GEN_1 == 17'h8033;	// Lookup.scala:31:38
  wire              _InstInfo_T_63 = _GEN_1 == 17'h233;	// Lookup.scala:31:38
  wire              _InstInfo_T_65 = _GEN_1 == 17'h333;	// Lookup.scala:31:38
  wire              _InstInfo_T_67 = _GEN_1 == 17'h3B3;	// Lookup.scala:31:38
  wire              _InstInfo_T_69 = _GEN_1 == 17'h133;	// Lookup.scala:31:38
  wire              _InstInfo_T_71 = _GEN_1 == 17'h1B3;	// Lookup.scala:31:38
  wire              _InstInfo_T_73 = _GEN_1 == 17'h433;	// Lookup.scala:31:38
  wire              _InstInfo_T_75 = _GEN_1 == 17'h633;	// Lookup.scala:31:38
  wire              _InstInfo_T_77 = _GEN_1 == 17'h6B3;	// Lookup.scala:31:38
  wire              _InstInfo_T_79 = _GEN_1 == 17'h733;	// Lookup.scala:31:38
  wire              _InstInfo_T_81 = _GEN_1 == 17'h7B3;	// Lookup.scala:31:38
  wire              _InstInfo_T_83 = _GEN_1 == 17'h3B;	// Lookup.scala:31:38
  wire              _InstInfo_T_85 = _GEN_1 == 17'h803B;	// Lookup.scala:31:38
  wire              _InstInfo_T_87 = _GEN_1 == 17'hBB;	// Lookup.scala:31:38
  wire              _InstInfo_T_89 = _GEN_1 == 17'h2BB;	// Lookup.scala:31:38
  wire              _InstInfo_T_91 = _GEN_1 == 17'h82BB;	// Lookup.scala:31:38
  wire              _InstInfo_T_93 = _GEN_1 == 17'h43B;	// Lookup.scala:31:38
  wire              _InstInfo_T_95 = _GEN_1 == 17'h63B;	// Lookup.scala:31:38
  wire              _InstInfo_T_97 = _GEN_1 == 17'h6BB;	// Lookup.scala:31:38
  wire              _InstInfo_T_99 = _GEN_1 == 17'h73B;	// Lookup.scala:31:38
  wire              _InstInfo_T_101 = _GEN_1 == 17'h7BB;	// Lookup.scala:31:38
  wire              _InstInfo_T_103 = io_IF_Inst[6:0] == 7'h6F;	// Lookup.scala:31:38
  wire              _InstInfo_T_105 = _GEN == 10'h63;	// Lookup.scala:31:38
  wire              _InstInfo_T_107 = _GEN == 10'hE3;	// Lookup.scala:31:38
  wire              _InstInfo_T_109 = _GEN == 10'h263;	// Lookup.scala:31:38
  wire              _InstInfo_T_111 = _GEN == 10'h363;	// Lookup.scala:31:38
  wire              _InstInfo_T_113 = _GEN == 10'h2E3;	// Lookup.scala:31:38
  wire              _InstInfo_T_115 = _GEN == 10'h3E3;	// Lookup.scala:31:38
  wire [2:0]        InstInfo_0 = _InstInfo_T_1 ? 3'h7 : _InstInfo_T_3 | _InstInfo_T_5 ? 3'h3 : _InstInfo_T_7 | _InstInfo_T_9
                | _InstInfo_T_11 | _InstInfo_T_13 | _InstInfo_T_15 | _InstInfo_T_17 | _InstInfo_T_19 |
                _InstInfo_T_21 | _InstInfo_T_23 | _InstInfo_T_25 | _InstInfo_T_27 | _InstInfo_T_29 |
                _InstInfo_T_31 | _InstInfo_T_33 | _InstInfo_T_35 | _InstInfo_T_37 | _InstInfo_T_39 |
                _InstInfo_T_41 | _InstInfo_T_43 | _InstInfo_T_45 | _InstInfo_T_47 ? 3'h1 : _InstInfo_T_49 |
                _InstInfo_T_51 | _InstInfo_T_53 | _InstInfo_T_203 ? 3'h4 : _InstInfo_T_57 | _InstInfo_T_59
                | _InstInfo_T_61 | _InstInfo_T_63 | _InstInfo_T_65 | _InstInfo_T_67 | _InstInfo_T_69 |
                _InstInfo_T_71 | _InstInfo_T_73 | _InstInfo_T_75 | _InstInfo_T_77 | _InstInfo_T_79 |
                _InstInfo_T_81 | _InstInfo_T_83 | _InstInfo_T_85 | _InstInfo_T_87 | _InstInfo_T_89 |
                _InstInfo_T_91 | _InstInfo_T_93 | _InstInfo_T_95 | _InstInfo_T_97 | _InstInfo_T_99 |
                _InstInfo_T_101 ? 3'h2 : _InstInfo_T_103 ? 3'h5 : _InstInfo_T_105 | _InstInfo_T_107 |
                _InstInfo_T_109 | _InstInfo_T_111 | _InstInfo_T_113 | _InstInfo_T_115 ? 3'h6 : 3'h0;	// Lookup.scala:31:38, :34:39
  wire              InstInfo_1 = ~_InstInfo_T_1 & ~_InstInfo_T_3 & ~_InstInfo_T_5 & ~_InstInfo_T_7 & ~_InstInfo_T_9 &
                ~_InstInfo_T_11 & ~_InstInfo_T_13 & ~_InstInfo_T_15 & ~_InstInfo_T_17 & ~_InstInfo_T_19 &
                ~_InstInfo_T_21 & ~_InstInfo_T_23 & ~_InstInfo_T_25 & ~_InstInfo_T_27 & ~_InstInfo_T_29 &
                ~_InstInfo_T_31 & ~_InstInfo_T_33 & (_InstInfo_T_35 | _InstInfo_T_37 | _InstInfo_T_39 |
                _InstInfo_T_41 | _InstInfo_T_43 | _InstInfo_T_45 | _InstInfo_T_47 | _InstInfo_T_49 |
                _InstInfo_T_51 | _InstInfo_T_53 | _InstInfo_T_203);	// Lookup.scala:31:38, :34:39
  wire              _GEN_2 = _InstInfo_T_17 | _InstInfo_T_19 | _InstInfo_T_21 | _InstInfo_T_23 | _InstInfo_T_25 |
                _InstInfo_T_27 | _InstInfo_T_29 | _InstInfo_T_31 | _InstInfo_T_33 | _InstInfo_T_35 |
                _InstInfo_T_37 | _InstInfo_T_39 | _InstInfo_T_41 | _InstInfo_T_43 | _InstInfo_T_45 |
                _InstInfo_T_47 | _InstInfo_T_49 | _InstInfo_T_51 | _InstInfo_T_53 | _InstInfo_T_203 |
                _InstInfo_T_57;	// Lookup.scala:31:38, :34:39
  wire              _GEN_3 = _InstInfo_T_59 | _InstInfo_T_61 | _InstInfo_T_63 | _InstInfo_T_65 | _InstInfo_T_67 |
                _InstInfo_T_69 | _InstInfo_T_71 | _InstInfo_T_73 | _InstInfo_T_75 | _InstInfo_T_77 |
                _InstInfo_T_79 | _InstInfo_T_81 | _InstInfo_T_83 | _InstInfo_T_85 | _InstInfo_T_87 |
                _InstInfo_T_89 | _InstInfo_T_91 | _InstInfo_T_93 | _InstInfo_T_95 | _InstInfo_T_97 |
                _InstInfo_T_99 | _InstInfo_T_101;	// Lookup.scala:31:38, :34:39
  wire [2:0]        InstInfo_2 = _InstInfo_T_1 ? 3'h0 : _InstInfo_T_3 ? 3'h1 : _InstInfo_T_5 ? 3'h0 : _InstInfo_T_7 |
                _InstInfo_T_9 | _InstInfo_T_11 | _InstInfo_T_13 ? 3'h2 : _InstInfo_T_15 ? 3'h6 : _GEN_2 |
                _GEN_3 ? 3'h2 : _InstInfo_T_103 ? 3'h6 : 3'h0;	// Lookup.scala:31:38, :34:39
  wire [2:0]        InstInfo_3 = _InstInfo_T_1 ? 3'h0 : _InstInfo_T_3 | _InstInfo_T_5 | _InstInfo_T_7 ? 3'h4 : _InstInfo_T_9
                | _InstInfo_T_11 | _InstInfo_T_13 ? 3'h5 : _InstInfo_T_15 ? 3'h0 : _InstInfo_T_17 |
                _InstInfo_T_19 | _InstInfo_T_21 | _InstInfo_T_23 | _InstInfo_T_25 | _InstInfo_T_27 ? 3'h4 :
                _InstInfo_T_29 | _InstInfo_T_31 | _InstInfo_T_33 ? 3'h5 : _InstInfo_T_35 | _InstInfo_T_37 |
                _InstInfo_T_39 | _InstInfo_T_41 | _InstInfo_T_43 | _InstInfo_T_45 | _InstInfo_T_47 |
                _InstInfo_T_49 | _InstInfo_T_51 | _InstInfo_T_53 | _InstInfo_T_203 ? 3'h4 : {1'h0,
                _InstInfo_T_57 | _InstInfo_T_59 | _InstInfo_T_61 | _InstInfo_T_63 | _InstInfo_T_65 |
                _InstInfo_T_67 | _InstInfo_T_69 | _InstInfo_T_71 | _InstInfo_T_73 | _InstInfo_T_75 |
                _InstInfo_T_77 | _InstInfo_T_79 | _InstInfo_T_81 | _InstInfo_T_83 | _InstInfo_T_85 |
                _InstInfo_T_87 | _InstInfo_T_89 | _InstInfo_T_91 | _InstInfo_T_93 | _InstInfo_T_95 |
                _InstInfo_T_97 | _InstInfo_T_99 ? 2'h3 : {2{_InstInfo_T_101}}};	// Lookup.scala:31:38, :34:39
  wire [4:0]        InstInfo_4 = _InstInfo_T_1 | _InstInfo_T_3 | _InstInfo_T_5 | _InstInfo_T_7 ? 5'h1 : _InstInfo_T_9 ? 5'h7
                : _InstInfo_T_11 ? 5'h8 : _InstInfo_T_13 ? 5'h9 : _InstInfo_T_15 ? 5'h1 : _InstInfo_T_17 ?
                5'h6 : _InstInfo_T_19 ? 5'h5 : _InstInfo_T_21 ? 5'h4 : _InstInfo_T_23 ? 5'hA :
                _InstInfo_T_25 ? 5'hB : _InstInfo_T_27 ? 5'h11 : _InstInfo_T_29 ? 5'h13 : _InstInfo_T_31 ?
                5'h15 : _InstInfo_T_33 ? 5'h14 : _InstInfo_T_35 ? 5'h3 : _InstInfo_T_37 ? 5'h5 :
                _InstInfo_T_39 ? 5'h9 : _InstInfo_T_41 ? 5'h11 : _InstInfo_T_43 ? 5'h2 : _InstInfo_T_45 ?
                5'h4 : _InstInfo_T_47 ? 5'h8 : _InstInfo_T_49 ? 5'h10 : _InstInfo_T_51 ? 5'h8 :
                _InstInfo_T_53 ? 5'h4 : _InstInfo_T_203 ? 5'h2 : _InstInfo_T_57 ? 5'h1 : _InstInfo_T_59 ?
                5'h7 : _InstInfo_T_61 ? 5'h2 : _InstInfo_T_63 ? 5'h6 : _InstInfo_T_65 ? 5'h5 :
                _InstInfo_T_67 ? 5'h4 : _InstInfo_T_69 ? 5'hA : _InstInfo_T_71 ? 5'hB : _InstInfo_T_73 ?
                5'hC : _InstInfo_T_75 ? 5'hD : _InstInfo_T_77 ? 5'hE : _InstInfo_T_79 ? 5'hF :
                _InstInfo_T_81 ? 5'h10 : _InstInfo_T_83 ? 5'h11 : _InstInfo_T_85 ? 5'h12 : _InstInfo_T_87 ?
                5'h13 : _InstInfo_T_89 ? 5'h15 : _InstInfo_T_91 ? 5'h14 : _InstInfo_T_93 ? 5'h19 :
                _InstInfo_T_95 ? 5'h1A : _InstInfo_T_97 ? 5'h1B : _InstInfo_T_99 ? 5'h1C : _InstInfo_T_101
                ? 5'h1D : {2'h0, _InstInfo_T_103 | _InstInfo_T_105 ? 3'h1 : _InstInfo_T_107 ? 3'h2 :
                _InstInfo_T_109 ? 3'h3 : _InstInfo_T_111 ? 3'h4 : _InstInfo_T_113 ? 3'h6 : _InstInfo_T_115
                ? 3'h5 : 3'h0};	// IDU.scala:82:31, Lookup.scala:31:38, :34:39
  wire [51:0]       _immI_T_2 = {52{io_IF_Inst[31]}};	// Bitwise.scala:77:12, IDU.scala:54:36
  wire [51:0]       _GEN_4 = {52{io_IF_Inst[31]}};	// IDU.scala:54:36, :56:10
  reg  [63:0]       GPR_0;	// IDU.scala:63:22
  reg  [63:0]       GPR_1;	// IDU.scala:63:22
  reg  [63:0]       GPR_2;	// IDU.scala:63:22
  reg  [63:0]       GPR_3;	// IDU.scala:63:22
  reg  [63:0]       GPR_4;	// IDU.scala:63:22
  reg  [63:0]       GPR_5;	// IDU.scala:63:22
  reg  [63:0]       GPR_6;	// IDU.scala:63:22
  reg  [63:0]       GPR_7;	// IDU.scala:63:22
  reg  [63:0]       GPR_8;	// IDU.scala:63:22
  reg  [63:0]       GPR_9;	// IDU.scala:63:22
  reg  [63:0]       GPR_10;	// IDU.scala:63:22
  reg  [63:0]       GPR_11;	// IDU.scala:63:22
  reg  [63:0]       GPR_12;	// IDU.scala:63:22
  reg  [63:0]       GPR_13;	// IDU.scala:63:22
  reg  [63:0]       GPR_14;	// IDU.scala:63:22
  reg  [63:0]       GPR_15;	// IDU.scala:63:22
  reg  [63:0]       GPR_16;	// IDU.scala:63:22
  reg  [63:0]       GPR_17;	// IDU.scala:63:22
  reg  [63:0]       GPR_18;	// IDU.scala:63:22
  reg  [63:0]       GPR_19;	// IDU.scala:63:22
  reg  [63:0]       GPR_20;	// IDU.scala:63:22
  reg  [63:0]       GPR_21;	// IDU.scala:63:22
  reg  [63:0]       GPR_22;	// IDU.scala:63:22
  reg  [63:0]       GPR_23;	// IDU.scala:63:22
  reg  [63:0]       GPR_24;	// IDU.scala:63:22
  reg  [63:0]       GPR_25;	// IDU.scala:63:22
  reg  [63:0]       GPR_26;	// IDU.scala:63:22
  reg  [63:0]       GPR_27;	// IDU.scala:63:22
  reg  [63:0]       GPR_28;	// IDU.scala:63:22
  reg  [63:0]       GPR_29;	// IDU.scala:63:22
  reg  [63:0]       GPR_30;	// IDU.scala:63:22
  reg  [63:0]       GPR_31;	// IDU.scala:63:22
  wire [31:0][63:0] _GEN_5 = {{GPR_31}, {GPR_30}, {GPR_29}, {GPR_28}, {GPR_27}, {GPR_26}, {GPR_25}, {GPR_24}, {GPR_23},
                {GPR_22}, {GPR_21}, {GPR_20}, {GPR_19}, {GPR_18}, {GPR_17}, {GPR_16}, {GPR_15}, {GPR_14},
                {GPR_13}, {GPR_12}, {GPR_11}, {GPR_10}, {GPR_9}, {GPR_8}, {GPR_7}, {GPR_6}, {GPR_5},
                {GPR_4}, {GPR_3}, {GPR_2}, {GPR_1}, {GPR_0}};	// IDU.scala:63:22, :74:20
  wire [63:0]       _GEN_6;	// IDU.scala:74:20
  /* synopsys infer_mux_override */
  assign _GEN_6 = _GEN_5[io_IF_Inst[19:15]] /* cadence map_to_mux */;	// IDU.scala:72:22, :74:20
  wire [63:0]       _rs1_data_T_1 = io_IF_Inst[19:15] == 5'h0 ? 64'h0 : _GEN_6;	// IDU.scala:56:63, :63:30, :72:22, :74:{20,25}
  wire [63:0]       _GEN_7;	// IDU.scala:75:20
  /* synopsys infer_mux_override */
  assign _GEN_7 = _GEN_5[io_IF_Inst[24:20]] /* cadence map_to_mux */;	// IDU.scala:73:22, :74:20, :75:20
  wire [63:0]       _rs2_data_T_1 = io_IF_Inst[24:20] == 5'h0 ? 64'h0 : _GEN_7;	// IDU.scala:56:63, :63:30, :73:22, :75:{20,25}
  wire              _io_ID_npc_T_9 = InstInfo_0 == 3'h1;	// IDU.scala:97:19, Lookup.scala:34:39
  wire              _io_ID_npc_T_4 = InstInfo_0 == 3'h6;	// IDU.scala:98:19, Lookup.scala:34:39
  wire              _io_ID_RegWriteEn_T_3 = InstInfo_0 == 3'h3;	// IDU.scala:99:19, Lookup.scala:34:39
  wire              _io_ID_MemWriteEn_T = InstInfo_0 == 3'h4;	// IDU.scala:100:19, Lookup.scala:34:39
  wire              _io_ID_npc_T_10 = InstInfo_2 == 3'h6;	// IDU.scala:107:15, Lookup.scala:34:39
  wire [63:0]       _io_ID_ALU_Data1_T_5 = io_IF_pc + 64'h4;	// IDU.scala:107:33
  wire              _io_ID_npc_T = InstInfo_0 == 3'h5;	// IDU.scala:119:114, Lookup.scala:34:39
  always @(posedge clock) begin
    if (reset) begin
      GPR_0 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_1 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_2 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_3 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_4 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_5 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_6 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_7 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_8 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_9 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_10 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_11 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_12 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_13 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_14 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_15 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_16 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_17 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_18 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_19 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_20 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_21 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_22 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_23 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_24 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_25 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_26 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_27 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_28 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_29 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_30 <= 64'h0;	// IDU.scala:63:{22,30}
      GPR_31 <= 64'h0;	// IDU.scala:63:{22,30}
    end
    else begin
      automatic logic _T_2 = io_EX_RegWriteEn & (|io_EX_RegWriteID);	// IDU.scala:80:{36,56}
      if (_T_2 & io_EX_RegWriteID == 5'h0)	// IDU.scala:56:63, :63:22, :80:36, :81:5, :82:31
        GPR_0 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h1)	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_1 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h2)	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_2 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h3)	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_3 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h4)	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_4 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h5)	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_5 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h6)	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_6 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h7)	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_7 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h8)	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_8 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h9)	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_9 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'hA)	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_10 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'hB)	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_11 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'hC)	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_12 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'hD)	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_13 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'hE)	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_14 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'hF)	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_15 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h10)	// IDU.scala:63:22, :80:36, :81:5, :82:31, Lookup.scala:34:39
        GPR_16 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h11)	// IDU.scala:63:22, :80:36, :81:5, :82:31, Lookup.scala:34:39
        GPR_17 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h12)	// IDU.scala:63:22, :80:36, :81:5, :82:31, Lookup.scala:34:39
        GPR_18 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h13)	// IDU.scala:63:22, :80:36, :81:5, :82:31, Lookup.scala:31:38
        GPR_19 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h14)	// IDU.scala:63:22, :80:36, :81:5, :82:31, Lookup.scala:34:39
        GPR_20 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h15)	// IDU.scala:63:22, :80:36, :81:5, :82:31, Lookup.scala:34:39
        GPR_21 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h16)	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_22 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h17)	// IDU.scala:63:22, :80:36, :81:5, :82:31, Lookup.scala:31:38
        GPR_23 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h18)	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_24 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h19)	// IDU.scala:63:22, :80:36, :81:5, :82:31, Lookup.scala:34:39
        GPR_25 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h1A)	// IDU.scala:63:22, :80:36, :81:5, :82:31, Lookup.scala:34:39
        GPR_26 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h1B)	// IDU.scala:63:22, :80:36, :81:5, :82:31, Lookup.scala:31:38
        GPR_27 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h1C)	// IDU.scala:63:22, :80:36, :81:5, :82:31, Lookup.scala:34:39
        GPR_28 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h1D)	// IDU.scala:63:22, :80:36, :81:5, :82:31, Lookup.scala:34:39
        GPR_29 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & io_EX_RegWriteID == 5'h1E)	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_30 <= io_EX_RegWriteData;	// IDU.scala:63:22
      if (_T_2 & (&io_EX_RegWriteID))	// IDU.scala:63:22, :80:36, :81:5, :82:31
        GPR_31 <= io_EX_RegWriteData;	// IDU.scala:63:22
    end
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:12:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:12:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:12:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_3;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_4;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_5;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_6;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_7;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_8;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_9;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_10;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_11;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_12;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_13;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_14;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_15;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_16;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_17;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_18;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_19;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_20;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_21;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_22;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_23;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_24;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_25;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_26;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_27;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_28;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_29;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_30;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_31;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_32;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_33;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_34;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_35;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_36;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_37;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_38;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_39;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_40;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_41;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_42;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_43;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_44;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_45;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_46;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_47;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_48;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_49;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_50;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_51;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_52;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_53;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_54;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_55;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_56;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_57;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_58;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_59;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_60;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_61;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_62;	// <stdin>:12:10
      automatic logic [31:0] _RANDOM_63;	// <stdin>:12:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:12:10
        `INIT_RANDOM_PROLOG_	// <stdin>:12:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:12:10
        _RANDOM_0 = `RANDOM;	// <stdin>:12:10
        _RANDOM_1 = `RANDOM;	// <stdin>:12:10
        _RANDOM_2 = `RANDOM;	// <stdin>:12:10
        _RANDOM_3 = `RANDOM;	// <stdin>:12:10
        _RANDOM_4 = `RANDOM;	// <stdin>:12:10
        _RANDOM_5 = `RANDOM;	// <stdin>:12:10
        _RANDOM_6 = `RANDOM;	// <stdin>:12:10
        _RANDOM_7 = `RANDOM;	// <stdin>:12:10
        _RANDOM_8 = `RANDOM;	// <stdin>:12:10
        _RANDOM_9 = `RANDOM;	// <stdin>:12:10
        _RANDOM_10 = `RANDOM;	// <stdin>:12:10
        _RANDOM_11 = `RANDOM;	// <stdin>:12:10
        _RANDOM_12 = `RANDOM;	// <stdin>:12:10
        _RANDOM_13 = `RANDOM;	// <stdin>:12:10
        _RANDOM_14 = `RANDOM;	// <stdin>:12:10
        _RANDOM_15 = `RANDOM;	// <stdin>:12:10
        _RANDOM_16 = `RANDOM;	// <stdin>:12:10
        _RANDOM_17 = `RANDOM;	// <stdin>:12:10
        _RANDOM_18 = `RANDOM;	// <stdin>:12:10
        _RANDOM_19 = `RANDOM;	// <stdin>:12:10
        _RANDOM_20 = `RANDOM;	// <stdin>:12:10
        _RANDOM_21 = `RANDOM;	// <stdin>:12:10
        _RANDOM_22 = `RANDOM;	// <stdin>:12:10
        _RANDOM_23 = `RANDOM;	// <stdin>:12:10
        _RANDOM_24 = `RANDOM;	// <stdin>:12:10
        _RANDOM_25 = `RANDOM;	// <stdin>:12:10
        _RANDOM_26 = `RANDOM;	// <stdin>:12:10
        _RANDOM_27 = `RANDOM;	// <stdin>:12:10
        _RANDOM_28 = `RANDOM;	// <stdin>:12:10
        _RANDOM_29 = `RANDOM;	// <stdin>:12:10
        _RANDOM_30 = `RANDOM;	// <stdin>:12:10
        _RANDOM_31 = `RANDOM;	// <stdin>:12:10
        _RANDOM_32 = `RANDOM;	// <stdin>:12:10
        _RANDOM_33 = `RANDOM;	// <stdin>:12:10
        _RANDOM_34 = `RANDOM;	// <stdin>:12:10
        _RANDOM_35 = `RANDOM;	// <stdin>:12:10
        _RANDOM_36 = `RANDOM;	// <stdin>:12:10
        _RANDOM_37 = `RANDOM;	// <stdin>:12:10
        _RANDOM_38 = `RANDOM;	// <stdin>:12:10
        _RANDOM_39 = `RANDOM;	// <stdin>:12:10
        _RANDOM_40 = `RANDOM;	// <stdin>:12:10
        _RANDOM_41 = `RANDOM;	// <stdin>:12:10
        _RANDOM_42 = `RANDOM;	// <stdin>:12:10
        _RANDOM_43 = `RANDOM;	// <stdin>:12:10
        _RANDOM_44 = `RANDOM;	// <stdin>:12:10
        _RANDOM_45 = `RANDOM;	// <stdin>:12:10
        _RANDOM_46 = `RANDOM;	// <stdin>:12:10
        _RANDOM_47 = `RANDOM;	// <stdin>:12:10
        _RANDOM_48 = `RANDOM;	// <stdin>:12:10
        _RANDOM_49 = `RANDOM;	// <stdin>:12:10
        _RANDOM_50 = `RANDOM;	// <stdin>:12:10
        _RANDOM_51 = `RANDOM;	// <stdin>:12:10
        _RANDOM_52 = `RANDOM;	// <stdin>:12:10
        _RANDOM_53 = `RANDOM;	// <stdin>:12:10
        _RANDOM_54 = `RANDOM;	// <stdin>:12:10
        _RANDOM_55 = `RANDOM;	// <stdin>:12:10
        _RANDOM_56 = `RANDOM;	// <stdin>:12:10
        _RANDOM_57 = `RANDOM;	// <stdin>:12:10
        _RANDOM_58 = `RANDOM;	// <stdin>:12:10
        _RANDOM_59 = `RANDOM;	// <stdin>:12:10
        _RANDOM_60 = `RANDOM;	// <stdin>:12:10
        _RANDOM_61 = `RANDOM;	// <stdin>:12:10
        _RANDOM_62 = `RANDOM;	// <stdin>:12:10
        _RANDOM_63 = `RANDOM;	// <stdin>:12:10
        GPR_0 = {_RANDOM_0, _RANDOM_1};	// IDU.scala:63:22
        GPR_1 = {_RANDOM_2, _RANDOM_3};	// IDU.scala:63:22
        GPR_2 = {_RANDOM_4, _RANDOM_5};	// IDU.scala:63:22
        GPR_3 = {_RANDOM_6, _RANDOM_7};	// IDU.scala:63:22
        GPR_4 = {_RANDOM_8, _RANDOM_9};	// IDU.scala:63:22
        GPR_5 = {_RANDOM_10, _RANDOM_11};	// IDU.scala:63:22
        GPR_6 = {_RANDOM_12, _RANDOM_13};	// IDU.scala:63:22
        GPR_7 = {_RANDOM_14, _RANDOM_15};	// IDU.scala:63:22
        GPR_8 = {_RANDOM_16, _RANDOM_17};	// IDU.scala:63:22
        GPR_9 = {_RANDOM_18, _RANDOM_19};	// IDU.scala:63:22
        GPR_10 = {_RANDOM_20, _RANDOM_21};	// IDU.scala:63:22
        GPR_11 = {_RANDOM_22, _RANDOM_23};	// IDU.scala:63:22
        GPR_12 = {_RANDOM_24, _RANDOM_25};	// IDU.scala:63:22
        GPR_13 = {_RANDOM_26, _RANDOM_27};	// IDU.scala:63:22
        GPR_14 = {_RANDOM_28, _RANDOM_29};	// IDU.scala:63:22
        GPR_15 = {_RANDOM_30, _RANDOM_31};	// IDU.scala:63:22
        GPR_16 = {_RANDOM_32, _RANDOM_33};	// IDU.scala:63:22
        GPR_17 = {_RANDOM_34, _RANDOM_35};	// IDU.scala:63:22
        GPR_18 = {_RANDOM_36, _RANDOM_37};	// IDU.scala:63:22
        GPR_19 = {_RANDOM_38, _RANDOM_39};	// IDU.scala:63:22
        GPR_20 = {_RANDOM_40, _RANDOM_41};	// IDU.scala:63:22
        GPR_21 = {_RANDOM_42, _RANDOM_43};	// IDU.scala:63:22
        GPR_22 = {_RANDOM_44, _RANDOM_45};	// IDU.scala:63:22
        GPR_23 = {_RANDOM_46, _RANDOM_47};	// IDU.scala:63:22
        GPR_24 = {_RANDOM_48, _RANDOM_49};	// IDU.scala:63:22
        GPR_25 = {_RANDOM_50, _RANDOM_51};	// IDU.scala:63:22
        GPR_26 = {_RANDOM_52, _RANDOM_53};	// IDU.scala:63:22
        GPR_27 = {_RANDOM_54, _RANDOM_55};	// IDU.scala:63:22
        GPR_28 = {_RANDOM_56, _RANDOM_57};	// IDU.scala:63:22
        GPR_29 = {_RANDOM_58, _RANDOM_59};	// IDU.scala:63:22
        GPR_30 = {_RANDOM_60, _RANDOM_61};	// IDU.scala:63:22
        GPR_31 = {_RANDOM_62, _RANDOM_63};	// IDU.scala:63:22
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:12:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:12:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_ID_npc = _io_ID_npc_T ? io_IF_pc + {{44{io_IF_Inst[31]}}, io_IF_Inst[19:12], io_IF_Inst[20],
                io_IF_Inst[30:21], 1'h0} : _io_ID_npc_T_4 & (InstInfo_4 == 5'h1 ? _rs1_data_T_1 ==
                _rs2_data_T_1 : InstInfo_4 == 5'h2 ? _rs1_data_T_1 != _rs2_data_T_1 : InstInfo_4 == 5'h3 ?
                $signed(_rs1_data_T_1) < $signed(_rs2_data_T_1) : InstInfo_4 == 5'h6 ?
                $signed(_rs1_data_T_1) >= $signed(_rs2_data_T_1) : InstInfo_4 == 5'h4 ? _rs1_data_T_1 <
                _rs2_data_T_1 : InstInfo_4 == 5'h5 & _rs1_data_T_1 >= _rs2_data_T_1) ? io_IF_pc + {_GEN_4,
                io_IF_Inst[7], io_IF_Inst[30:25], io_IF_Inst[11:8], 1'h0} : _io_ID_npc_T_9 &
                _io_ID_npc_T_10 ? _rs1_data_T_1 + {_immI_T_2, io_IF_Inst[31:20]} : {32'h0,
                _io_ID_ALU_Data1_T_5[31:0]};	// <stdin>:12:10, Bitwise.scala:77:12, IDU.scala:54:{36,53}, :56:10, :57:{80,107,128}, :58:{54,76,101}, :74:20, :75:20, :82:31, :97:19, :98:19, :107:{15,33}, :119:114, :125:13, :126:19, :127:{34,46}, :128:{34,46}, :129:{34,53}, :130:{34,53}, :131:{34,46}, :132:{34,46}, :136:13, :138:40, :139:{31,58}, :140:{31,58}, Lookup.scala:34:39, Mux.scala:101:16
  assign io_ID_ALU_Data1 = InstInfo_2 == 3'h0 ? 64'h0 : InstInfo_2 == 3'h1 ? io_IF_pc : InstInfo_2 == 3'h2 ?
                _rs1_data_T_1 : _io_ID_npc_T_10 ? _io_ID_ALU_Data1_T_5 : 64'h0;	// <stdin>:12:10, IDU.scala:63:30, :74:20, :104:15, :105:15, :106:15, :107:{15,33}, Lookup.scala:34:39, Mux.scala:101:16
  assign io_ID_ALU_Data2 = InstInfo_3 == 3'h0 ? 64'h0 : InstInfo_3 == 3'h1 ? io_IF_pc : InstInfo_3 == 3'h3 ?
                _rs2_data_T_1 : InstInfo_3 == 3'h4 ? (_io_ID_npc_T_9 ? {_immI_T_2, io_IF_Inst[31:20]} :
                _io_ID_npc_T_4 ? {{53{io_IF_Inst[31]}}, io_IF_Inst[7], io_IF_Inst[30:25], io_IF_Inst[11:8]}
                : _io_ID_RegWriteEn_T_3 ? {{32{io_IF_Inst[31]}}, io_IF_Inst[31:12], 12'h0} :
                _io_ID_MemWriteEn_T ? {_GEN_4, io_IF_Inst[31:25], io_IF_Inst[11:7]} : 64'h0) : {58'h0,
                InstInfo_3 == 3'h5 ? io_IF_Inst[25:20] : 6'h0};	// <stdin>:12:10, Bitwise.scala:77:12, Cat.scala:33:92, IDU.scala:54:{36,53}, :55:{10,53,63}, :56:{10,53,80}, :57:{80,107,128}, :59:24, :63:30, :75:20, :97:19, :98:19, :99:19, :100:19, :111:15, :112:15, :113:15, :114:15, :115:15, Lookup.scala:34:39, Mux.scala:101:16
  assign io_ID_FuType = InstInfo_1;	// <stdin>:12:10, Lookup.scala:34:39
  assign io_ID_optype = InstInfo_4;	// <stdin>:12:10, Lookup.scala:34:39
  assign io_ID_Rs2Data = _rs2_data_T_1;	// <stdin>:12:10, IDU.scala:75:20
  assign io_ID_RegWriteID = io_IF_Inst[11:7];	// <stdin>:12:10, IDU.scala:56:80
  assign io_ID_RegWriteEn = InstInfo_0 == 3'h2 | _io_ID_npc_T_9 | _io_ID_RegWriteEn_T_3 | _io_ID_npc_T;	// <stdin>:12:10, IDU.scala:97:19, :99:19, :119:{39,101,114}, Lookup.scala:34:39
  assign io_ID_MemWriteEn = _io_ID_MemWriteEn_T;	// <stdin>:12:10, IDU.scala:100:19
  assign io_ID_MemReadEn = InstInfo_0 != 3'h4 & InstInfo_1;	// <stdin>:12:10, IDU.scala:121:{39,51}, Lookup.scala:34:39
  assign io_ID_GPR_0 = GPR_0;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_1 = GPR_1;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_2 = GPR_2;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_3 = GPR_3;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_4 = GPR_4;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_5 = GPR_5;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_6 = GPR_6;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_7 = GPR_7;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_8 = GPR_8;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_9 = GPR_9;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_10 = GPR_10;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_11 = GPR_11;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_12 = GPR_12;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_13 = GPR_13;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_14 = GPR_14;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_15 = GPR_15;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_16 = GPR_16;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_17 = GPR_17;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_18 = GPR_18;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_19 = GPR_19;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_20 = GPR_20;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_21 = GPR_21;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_22 = GPR_22;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_23 = GPR_23;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_24 = GPR_24;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_25 = GPR_25;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_26 = GPR_26;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_27 = GPR_27;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_28 = GPR_28;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_29 = GPR_29;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_30 = GPR_30;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_GPR_31 = GPR_31;	// <stdin>:12:10, IDU.scala:63:22
  assign io_ID_unknown_inst = InstInfo_0 == 3'h0;	// <stdin>:12:10, IDU.scala:43:39, Lookup.scala:34:39
endmodule

module EXU(	// <stdin>:660:10
  input  [63:0] io_ID_ALU_Data1,
                io_ID_ALU_Data2,
                io_ID_Rs2Data,
  input  [4:0]  io_ID_optype,
  input         io_ID_FuType,
                io_ID_RegWriteEn,
  input  [4:0]  io_ID_RegWriteID,
  input         io_ID_MemWriteEn,
                io_ID_MemReadEn,
  output [63:0] io_EX_ALUResult,
                io_EX_MemWriteData,
  output        io_EX_MemWriteEn,
                io_EX_MemReadEn,
  output [4:0]  io_EX_LsuType,
                io_EX_RegWriteID,
  output        io_EX_RegWriteEn);

  wire [63:0]       _ALU_Result_T_4 = io_ID_ALU_Data1 + io_ID_ALU_Data2;	// EXU.scala:42:83
  wire [63:0]       _ALU_Result_T_7 = io_ID_ALU_Data1 - io_ID_ALU_Data2;	// EXU.scala:43:53
  wire [63:0]       _ALU_Result_T_69 = io_ID_ALU_Data1 & io_ID_ALU_Data2;	// EXU.scala:44:53
  wire [63:0]       _ALU_Result_T_67 = io_ID_ALU_Data1 | io_ID_ALU_Data2;	// EXU.scala:45:53
  wire [63:0]       _ALU_Result_T_65 = io_ID_ALU_Data1 ^ io_ID_ALU_Data2;	// EXU.scala:46:53
  wire [126:0]      _ALU_Result_T_15 = {63'h0, io_ID_ALU_Data1} << io_ID_ALU_Data2[5:0];	// EXU.scala:38:29, :47:52
  wire [63:0]       _GEN = {58'h0, io_ID_ALU_Data2[5:0]};	// EXU.scala:38:29, :48:52
  wire [63:0]       _GEN_0 = io_ID_ALU_Data1 * io_ID_ALU_Data2;	// EXU.scala:52:52
  wire [64:0]       _GEN_1 = {io_ID_ALU_Data1[63], io_ID_ALU_Data1};	// EXU.scala:53:60
  wire [64:0]       _GEN_2 = {io_ID_ALU_Data2[63], io_ID_ALU_Data2};	// EXU.scala:53:60
  wire [64:0]       _ALU_Result_T_33 = $signed(_GEN_1) / $signed(_GEN_2);	// EXU.scala:53:60
  wire [63:0]       _ALU_Result_T_78 = io_ID_ALU_Data1 / io_ID_ALU_Data2;	// EXU.scala:54:52
  wire [63:0]       _ALU_Result_T_85 = io_ID_ALU_Data1 % io_ID_ALU_Data2;	// EXU.scala:56:53
  wire [62:0]       _ALU_Result_T_53 = {31'h0, io_ID_ALU_Data1[31:0]} << io_ID_ALU_Data2[4:0];	// EXU.scala:59:{57,65,73}
  wire [31:0]       _GEN_3 = {27'h0, io_ID_ALU_Data2[4:0]};	// EXU.scala:59:73, :60:65
  wire [31:0]       _ALU_Result_ret_T_18 = io_ID_ALU_Data1[31:0] >> _GEN_3;	// EXU.scala:59:57, :60:65
  wire [31:0]       _ALU_Result_T_62 = $signed($signed(io_ID_ALU_Data1[31:0]) >>> _GEN_3);	// EXU.scala:59:57, :60:65, :61:73
  wire [64:0]       _ALU_Result_T_75 = $signed(_GEN_1) / $signed(_GEN_2);	// EXU.scala:53:60, :66:66
  wire [63:0]       _ALU_Result_T_82 = $signed(io_ID_ALU_Data1) % $signed(io_ID_ALU_Data2);	// EXU.scala:68:66
  wire [31:0][63:0] _GEN_4 = {{64'h0}, {64'h0}, {{{32{_ALU_Result_T_85[31]}}, _ALU_Result_T_85[31:0]}},
                {{{32{_ALU_Result_T_82[31]}}, _ALU_Result_T_82[31:0]}}, {{{32{_ALU_Result_T_78[31]}},
                _ALU_Result_T_78[31:0]}}, {{{32{_ALU_Result_T_75[31]}}, _ALU_Result_T_75[31:0]}},
                {{{32{_GEN_0[31]}}, _GEN_0[31:0]}}, {{{32{_ALU_Result_T_69[31]}}, _ALU_Result_T_69[31:0]}},
                {{{32{_ALU_Result_T_67[31]}}, _ALU_Result_T_67[31:0]}}, {{{32{_ALU_Result_T_65[31]}},
                _ALU_Result_T_65[31:0]}}, {{{32{_ALU_Result_ret_T_18[31]}}, _ALU_Result_ret_T_18}},
                {{{32{_ALU_Result_T_62[31]}}, _ALU_Result_T_62}}, {{{32{_ALU_Result_T_53[31]}},
                _ALU_Result_T_53[31:0]}}, {{{32{_ALU_Result_T_7[31]}}, _ALU_Result_T_7[31:0]}},
                {{{32{_ALU_Result_T_4[31]}}, _ALU_Result_T_4[31:0]}}, {_ALU_Result_T_85},
                {$signed(io_ID_ALU_Data1) % $signed(io_ID_ALU_Data2)}, {_ALU_Result_T_78},
                {_ALU_Result_T_33[63:0]}, {_GEN_0}, {{63'h0, io_ID_ALU_Data1 < io_ID_ALU_Data2}}, {{63'h0,
                $signed(io_ID_ALU_Data1) < $signed(io_ID_ALU_Data2)}}, {$signed($signed(io_ID_ALU_Data1)
                >>> _GEN)}, {io_ID_ALU_Data1 >> _GEN}, {_ALU_Result_T_15[63:0]}, {_ALU_Result_T_65},
                {_ALU_Result_T_67}, {_ALU_Result_T_69}, {64'h0}, {_ALU_Result_T_7}, {64'h0}, {64'h0}};	// Bitwise.scala:77:12, Cat.scala:33:92, EXU.scala:42:83, :43:{23,53}, :44:{23,53}, :45:{23,53}, :46:{23,53}, :47:{23,52}, :48:{23,52}, :49:{23,60}, :50:{23,53}, :51:{23,60}, :52:{23,52}, :53:{23,60}, :54:{23,52}, :55:{23,60}, :56:{23,53}, :57:23, :58:23, :59:{23,65}, :60:{23,65}, :61:{23,73}, :62:23, :63:23, :64:23, :65:23, :66:{23,66}, :67:23, :68:{23,66}, :69:23, Mux.scala:101:16, utils.scala:8:{34,45}
  assign io_EX_ALUResult = io_ID_optype == 5'h1 | io_ID_FuType ? _ALU_Result_T_4 : _GEN_4[io_ID_optype];	// <stdin>:660:10, EXU.scala:42:{23,35,83}, :43:23, :44:23, :45:23, :46:23, :47:23, :48:23, :49:23, :50:23, :51:23, :52:23, :53:23, :54:23, :55:23, :56:23, :57:23, :58:23, :59:23, :60:23, :61:23, :62:23, :63:23, :64:23, :65:23, :66:23, :67:23, :68:23, :69:23, Mux.scala:101:16
  assign io_EX_MemWriteData = io_ID_Rs2Data;	// <stdin>:660:10
  assign io_EX_MemWriteEn = io_ID_MemWriteEn;	// <stdin>:660:10
  assign io_EX_MemReadEn = io_ID_MemReadEn;	// <stdin>:660:10
  assign io_EX_LsuType = io_ID_FuType ? io_ID_optype : 5'h0;	// <stdin>:660:10, EXU.scala:36:28
  assign io_EX_RegWriteID = io_ID_RegWriteID;	// <stdin>:660:10
  assign io_EX_RegWriteEn = io_ID_RegWriteEn;	// <stdin>:660:10
endmodule

// external module LSU

module MEMU(	// <stdin>:894:10
  input  [63:0] io_EX_ALUResult,
                io_EX_MemWriteData,
  input         io_EX_MemWriteEn,
                io_EX_MemReadEn,
  input  [4:0]  io_EX_LsuType,
  input         io_EX_RegWriteEn,
  input  [4:0]  io_EX_RegWriteID,
  output [63:0] io_MEM_RegWriteData,
  output        io_MEM_RegWriteEn,
  output [4:0]  io_MEM_RegWriteID);

  wire [63:0] _mem_ReadData;	// MEMU.scala:36:21
  LSU mem (	// MEMU.scala:36:21
    .addr      (io_EX_ALUResult),
    .LsuType   (io_EX_LsuType),
    .WriteEn   (io_EX_MemWriteEn),
    .ReadEn    (io_EX_MemReadEn),
    .WriteData (io_EX_MemWriteData),
    .ReadData  (_mem_ReadData)
  );
  assign io_MEM_RegWriteData = (|io_EX_LsuType) & ~io_EX_MemWriteEn ? _mem_ReadData : io_EX_ALUResult;	// <stdin>:894:10, MEMU.scala:36:21, :42:{31,47,56,77}
  assign io_MEM_RegWriteEn = io_EX_RegWriteEn;	// <stdin>:894:10
  assign io_MEM_RegWriteID = io_EX_RegWriteID;	// <stdin>:894:10
endmodule

// external module sim

module top(	// <stdin>:928:10
  input         clock,
                reset,
  output [63:0] io_IF_pc,
                io_ALUResult);

  wire [63:0] _simulate_inst;	// top.scala:28:26
  wire [63:0] _mem_unit_io_MEM_RegWriteData;	// top.scala:26:26
  wire        _mem_unit_io_MEM_RegWriteEn;	// top.scala:26:26
  wire [4:0]  _mem_unit_io_MEM_RegWriteID;	// top.scala:26:26
  wire [63:0] _excute_unit_io_EX_ALUResult;	// top.scala:25:29
  wire [63:0] _excute_unit_io_EX_MemWriteData;	// top.scala:25:29
  wire        _excute_unit_io_EX_MemWriteEn;	// top.scala:25:29
  wire        _excute_unit_io_EX_MemReadEn;	// top.scala:25:29
  wire [4:0]  _excute_unit_io_EX_LsuType;	// top.scala:25:29
  wire [4:0]  _excute_unit_io_EX_RegWriteID;	// top.scala:25:29
  wire        _excute_unit_io_EX_RegWriteEn;	// top.scala:25:29
  wire [63:0] _inst_decode_unit_io_ID_npc;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_ALU_Data1;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_ALU_Data2;	// top.scala:24:34
  wire        _inst_decode_unit_io_ID_FuType;	// top.scala:24:34
  wire [4:0]  _inst_decode_unit_io_ID_optype;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_Rs2Data;	// top.scala:24:34
  wire [4:0]  _inst_decode_unit_io_ID_RegWriteID;	// top.scala:24:34
  wire        _inst_decode_unit_io_ID_RegWriteEn;	// top.scala:24:34
  wire        _inst_decode_unit_io_ID_MemWriteEn;	// top.scala:24:34
  wire        _inst_decode_unit_io_ID_MemReadEn;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_0;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_1;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_2;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_3;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_4;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_5;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_6;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_7;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_8;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_9;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_10;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_11;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_12;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_13;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_14;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_15;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_16;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_17;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_18;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_19;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_20;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_21;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_22;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_23;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_24;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_25;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_26;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_27;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_28;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_29;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_30;	// top.scala:24:34
  wire [63:0] _inst_decode_unit_io_ID_GPR_31;	// top.scala:24:34
  wire        _inst_decode_unit_io_ID_unknown_inst;	// top.scala:24:34
  wire [63:0] _inst_fetch_unit_io_IF_pc;	// top.scala:23:33
  IFU inst_fetch_unit (	// top.scala:23:33
    .clock     (clock),
    .reset     (reset),
    .io_IF_npc (_inst_decode_unit_io_ID_npc),	// top.scala:24:34
    .io_IF_pc  (_inst_fetch_unit_io_IF_pc)
  );
  IDU inst_decode_unit (	// top.scala:24:34
    .clock              (clock),
    .reset              (reset),
    .io_IF_Inst         (_simulate_inst[31:0]),	// top.scala:28:26, :32:52
    .io_IF_pc           (_inst_fetch_unit_io_IF_pc),	// top.scala:23:33
    .io_EX_RegWriteData (_mem_unit_io_MEM_RegWriteData),	// top.scala:26:26
    .io_EX_RegWriteID   (_mem_unit_io_MEM_RegWriteID),	// top.scala:26:26
    .io_EX_RegWriteEn   (_mem_unit_io_MEM_RegWriteEn),	// top.scala:26:26
    .io_ID_npc          (_inst_decode_unit_io_ID_npc),
    .io_ID_ALU_Data1    (_inst_decode_unit_io_ID_ALU_Data1),
    .io_ID_ALU_Data2    (_inst_decode_unit_io_ID_ALU_Data2),
    .io_ID_FuType       (_inst_decode_unit_io_ID_FuType),
    .io_ID_optype       (_inst_decode_unit_io_ID_optype),
    .io_ID_Rs2Data      (_inst_decode_unit_io_ID_Rs2Data),
    .io_ID_RegWriteID   (_inst_decode_unit_io_ID_RegWriteID),
    .io_ID_RegWriteEn   (_inst_decode_unit_io_ID_RegWriteEn),
    .io_ID_MemWriteEn   (_inst_decode_unit_io_ID_MemWriteEn),
    .io_ID_MemReadEn    (_inst_decode_unit_io_ID_MemReadEn),
    .io_ID_GPR_0        (_inst_decode_unit_io_ID_GPR_0),
    .io_ID_GPR_1        (_inst_decode_unit_io_ID_GPR_1),
    .io_ID_GPR_2        (_inst_decode_unit_io_ID_GPR_2),
    .io_ID_GPR_3        (_inst_decode_unit_io_ID_GPR_3),
    .io_ID_GPR_4        (_inst_decode_unit_io_ID_GPR_4),
    .io_ID_GPR_5        (_inst_decode_unit_io_ID_GPR_5),
    .io_ID_GPR_6        (_inst_decode_unit_io_ID_GPR_6),
    .io_ID_GPR_7        (_inst_decode_unit_io_ID_GPR_7),
    .io_ID_GPR_8        (_inst_decode_unit_io_ID_GPR_8),
    .io_ID_GPR_9        (_inst_decode_unit_io_ID_GPR_9),
    .io_ID_GPR_10       (_inst_decode_unit_io_ID_GPR_10),
    .io_ID_GPR_11       (_inst_decode_unit_io_ID_GPR_11),
    .io_ID_GPR_12       (_inst_decode_unit_io_ID_GPR_12),
    .io_ID_GPR_13       (_inst_decode_unit_io_ID_GPR_13),
    .io_ID_GPR_14       (_inst_decode_unit_io_ID_GPR_14),
    .io_ID_GPR_15       (_inst_decode_unit_io_ID_GPR_15),
    .io_ID_GPR_16       (_inst_decode_unit_io_ID_GPR_16),
    .io_ID_GPR_17       (_inst_decode_unit_io_ID_GPR_17),
    .io_ID_GPR_18       (_inst_decode_unit_io_ID_GPR_18),
    .io_ID_GPR_19       (_inst_decode_unit_io_ID_GPR_19),
    .io_ID_GPR_20       (_inst_decode_unit_io_ID_GPR_20),
    .io_ID_GPR_21       (_inst_decode_unit_io_ID_GPR_21),
    .io_ID_GPR_22       (_inst_decode_unit_io_ID_GPR_22),
    .io_ID_GPR_23       (_inst_decode_unit_io_ID_GPR_23),
    .io_ID_GPR_24       (_inst_decode_unit_io_ID_GPR_24),
    .io_ID_GPR_25       (_inst_decode_unit_io_ID_GPR_25),
    .io_ID_GPR_26       (_inst_decode_unit_io_ID_GPR_26),
    .io_ID_GPR_27       (_inst_decode_unit_io_ID_GPR_27),
    .io_ID_GPR_28       (_inst_decode_unit_io_ID_GPR_28),
    .io_ID_GPR_29       (_inst_decode_unit_io_ID_GPR_29),
    .io_ID_GPR_30       (_inst_decode_unit_io_ID_GPR_30),
    .io_ID_GPR_31       (_inst_decode_unit_io_ID_GPR_31),
    .io_ID_unknown_inst (_inst_decode_unit_io_ID_unknown_inst)
  );
  EXU excute_unit (	// top.scala:25:29
    .io_ID_ALU_Data1    (_inst_decode_unit_io_ID_ALU_Data1),	// top.scala:24:34
    .io_ID_ALU_Data2    (_inst_decode_unit_io_ID_ALU_Data2),	// top.scala:24:34
    .io_ID_Rs2Data      (_inst_decode_unit_io_ID_Rs2Data),	// top.scala:24:34
    .io_ID_optype       (_inst_decode_unit_io_ID_optype),	// top.scala:24:34
    .io_ID_FuType       (_inst_decode_unit_io_ID_FuType),	// top.scala:24:34
    .io_ID_RegWriteEn   (_inst_decode_unit_io_ID_RegWriteEn),	// top.scala:24:34
    .io_ID_RegWriteID   (_inst_decode_unit_io_ID_RegWriteID),	// top.scala:24:34
    .io_ID_MemWriteEn   (_inst_decode_unit_io_ID_MemWriteEn),	// top.scala:24:34
    .io_ID_MemReadEn    (_inst_decode_unit_io_ID_MemReadEn),	// top.scala:24:34
    .io_EX_ALUResult    (_excute_unit_io_EX_ALUResult),
    .io_EX_MemWriteData (_excute_unit_io_EX_MemWriteData),
    .io_EX_MemWriteEn   (_excute_unit_io_EX_MemWriteEn),
    .io_EX_MemReadEn    (_excute_unit_io_EX_MemReadEn),
    .io_EX_LsuType      (_excute_unit_io_EX_LsuType),
    .io_EX_RegWriteID   (_excute_unit_io_EX_RegWriteID),
    .io_EX_RegWriteEn   (_excute_unit_io_EX_RegWriteEn)
  );
  MEMU mem_unit (	// top.scala:26:26
    .io_EX_ALUResult     (_excute_unit_io_EX_ALUResult),	// top.scala:25:29
    .io_EX_MemWriteData  (_excute_unit_io_EX_MemWriteData),	// top.scala:25:29
    .io_EX_MemWriteEn    (_excute_unit_io_EX_MemWriteEn),	// top.scala:25:29
    .io_EX_MemReadEn     (_excute_unit_io_EX_MemReadEn),	// top.scala:25:29
    .io_EX_LsuType       (_excute_unit_io_EX_LsuType),	// top.scala:25:29
    .io_EX_RegWriteEn    (_excute_unit_io_EX_RegWriteEn),	// top.scala:25:29
    .io_EX_RegWriteID    (_excute_unit_io_EX_RegWriteID),	// top.scala:25:29
    .io_MEM_RegWriteData (_mem_unit_io_MEM_RegWriteData),
    .io_MEM_RegWriteEn   (_mem_unit_io_MEM_RegWriteEn),
    .io_MEM_RegWriteID   (_mem_unit_io_MEM_RegWriteID)
  );
  sim simulate (	// top.scala:28:26
    .clock             (1'h0),	// <stdin>:951:20
    .reset             (1'h0),	// <stdin>:951:20
    .IF_pc             (_inst_fetch_unit_io_IF_pc),	// top.scala:23:33
    .GPR_0             (_inst_decode_unit_io_ID_GPR_0),	// top.scala:24:34
    .GPR_1             (_inst_decode_unit_io_ID_GPR_1),	// top.scala:24:34
    .GPR_2             (_inst_decode_unit_io_ID_GPR_2),	// top.scala:24:34
    .GPR_3             (_inst_decode_unit_io_ID_GPR_3),	// top.scala:24:34
    .GPR_4             (_inst_decode_unit_io_ID_GPR_4),	// top.scala:24:34
    .GPR_5             (_inst_decode_unit_io_ID_GPR_5),	// top.scala:24:34
    .GPR_6             (_inst_decode_unit_io_ID_GPR_6),	// top.scala:24:34
    .GPR_7             (_inst_decode_unit_io_ID_GPR_7),	// top.scala:24:34
    .GPR_8             (_inst_decode_unit_io_ID_GPR_8),	// top.scala:24:34
    .GPR_9             (_inst_decode_unit_io_ID_GPR_9),	// top.scala:24:34
    .GPR_10            (_inst_decode_unit_io_ID_GPR_10),	// top.scala:24:34
    .GPR_11            (_inst_decode_unit_io_ID_GPR_11),	// top.scala:24:34
    .GPR_12            (_inst_decode_unit_io_ID_GPR_12),	// top.scala:24:34
    .GPR_13            (_inst_decode_unit_io_ID_GPR_13),	// top.scala:24:34
    .GPR_14            (_inst_decode_unit_io_ID_GPR_14),	// top.scala:24:34
    .GPR_15            (_inst_decode_unit_io_ID_GPR_15),	// top.scala:24:34
    .GPR_16            (_inst_decode_unit_io_ID_GPR_16),	// top.scala:24:34
    .GPR_17            (_inst_decode_unit_io_ID_GPR_17),	// top.scala:24:34
    .GPR_18            (_inst_decode_unit_io_ID_GPR_18),	// top.scala:24:34
    .GPR_19            (_inst_decode_unit_io_ID_GPR_19),	// top.scala:24:34
    .GPR_20            (_inst_decode_unit_io_ID_GPR_20),	// top.scala:24:34
    .GPR_21            (_inst_decode_unit_io_ID_GPR_21),	// top.scala:24:34
    .GPR_22            (_inst_decode_unit_io_ID_GPR_22),	// top.scala:24:34
    .GPR_23            (_inst_decode_unit_io_ID_GPR_23),	// top.scala:24:34
    .GPR_24            (_inst_decode_unit_io_ID_GPR_24),	// top.scala:24:34
    .GPR_25            (_inst_decode_unit_io_ID_GPR_25),	// top.scala:24:34
    .GPR_26            (_inst_decode_unit_io_ID_GPR_26),	// top.scala:24:34
    .GPR_27            (_inst_decode_unit_io_ID_GPR_27),	// top.scala:24:34
    .GPR_28            (_inst_decode_unit_io_ID_GPR_28),	// top.scala:24:34
    .GPR_29            (_inst_decode_unit_io_ID_GPR_29),	// top.scala:24:34
    .GPR_30            (_inst_decode_unit_io_ID_GPR_30),	// top.scala:24:34
    .GPR_31            (_inst_decode_unit_io_ID_GPR_31),	// top.scala:24:34
    .unknown_inst_flag (_inst_decode_unit_io_ID_unknown_inst),	// top.scala:24:34
    .inst              (_simulate_inst)
  );
  assign io_IF_pc = _inst_fetch_unit_io_IF_pc;	// <stdin>:928:10, top.scala:23:33
  assign io_ALUResult = _mem_unit_io_MEM_RegWriteData;	// <stdin>:928:10, top.scala:26:26
endmodule


// ----- 8< ----- FILE "./build/LSU.v" ----- 8< -----

import "DPI-C" function void dci_pmem_write(input longint waddr, input longint wdata, input byte wmask);
import "DPI-C" function void dci_pmem_read(input longint raddr, output longint rdata, input byte rmask);

module LSU(input [63:0] addr, input [4:0] LsuType, input WriteEn, input ReadEn, input [63:0]WriteData, output [63:0] ReadData);

    wire [7:0] mask;
    wire [63:0] lw_result;
    wire [63:0] lh_result;
    wire [63:0] lb_result;
    reg [63:0] data_r;

    wire lw_flag = LsuType[0] && ((mask ^ 8'h0F) == 8'b0);
    wire lh_flag = LsuType[0] && ((mask ^ 8'h03) == 8'b0);
    wire lb_flag = LsuType[0] && ((mask ^ 8'h01) == 8'b0);
    assign mask = ~(8'hFF << LsuType[4:1]);
    assign lw_result = {{32{data_r[31]}}, data_r[31:0]};
    assign lh_result = {{48{data_r[15]}}, data_r[15:0]};
    assign lb_result = {{56{data_r[7]}}, data_r[7:0]};
    assign ReadData = lw_flag     ? lw_result :
                      lh_flag     ? lh_result :
                      lb_flag     ? lb_result : data_r;

        always@(*) begin
            if(WriteEn) begin
                dci_pmem_write(addr, WriteData, mask);
                data_r = 64'h0;
            end
            else if(ReadEn)begin
                dci_pmem_read(addr, data_r, mask);
            end
            else
                data_r = 64'b0;
        end
endmodule

// ----- 8< ----- FILE "./build/sim.v" ----- 8< -----

import "DPI-C" function void set_gpr_ptr(input logic [63:0] a []);
import "DPI-C" function void unknown_inst();
import "DPI-C" function void ebreak(input longint halt_ret);


wire [63:0] GPR [31:0];
assign {GPR[31], GPR[30], GPR[29], GPR[28], GPR[27], GPR[26], GPR[25], GPR[24], GPR[23], GPR[22], GPR[21], GPR[20]
, GPR[19], GPR[18], GPR[17], GPR[16], GPR[15], GPR[14], GPR[13], GPR[12], GPR[11], GPR[10], GPR[9], GPR[8], GPR[7]
, GPR[6], GPR[5], GPR[4], GPR[3], GPR[2], GPR[1], GPR[0]} = 
{{_inst_decode_unit_io_ID_GPR_31}, {_inst_decode_unit_io_ID_GPR_30}, {_inst_decode_unit_io_ID_GPR_29}, 
{_inst_decode_unit_io_ID_GPR_28}, {_inst_decode_unit_io_ID_GPR_27}, {_inst_decode_unit_io_ID_GPR_26}, {_inst_decode_unit_io_ID_GPR_25}, 
{_inst_decode_unit_io_ID_GPR_24}, {_inst_decode_unit_io_ID_GPR_23}, {_inst_decode_unit_io_ID_GPR_22}, {_inst_decode_unit_io_ID_GPR_21}, 
{_inst_decode_unit_io_ID_GPR_20}, {_inst_decode_unit_io_ID_GPR_19}, {_inst_decode_unit_io_ID_GPR_18}, {_inst_decode_unit_io_ID_GPR_17}, 
{_inst_decode_unit_io_ID_GPR_16}, {_inst_decode_unit_io_ID_GPR_15}, {_inst_decode_unit_io_ID_GPR_14}, {_inst_decode_unit_io_ID_GPR_13}, 
{_inst_decode_unit_io_ID_GPR_12}, {_inst_decode_unit_io_ID_GPR_11}, {_inst_decode_unit_io_ID_GPR_10}, {_inst_decode_unit_io_ID_GPR_9 }, 
{_inst_decode_unit_io_ID_GPR_8 }, {_inst_decode_unit_io_ID_GPR_7 }, {_inst_decode_unit_io_ID_GPR_6 }, {_inst_decode_unit_io_ID_GPR_5 },
{_inst_decode_unit_io_ID_GPR_4 }, {_inst_decode_unit_io_ID_GPR_3 }, {_inst_decode_unit_io_ID_GPR_2 }, {_inst_decode_unit_io_ID_GPR_1 }, 
{_inst_decode_unit_io_ID_GPR_0}};	// IDU.scala:55:22, :66:20

sim simulate (	// top.scala:24:26
   .IF_pc             (_inst_fetch_unit_io_IF_pc),	// top.scala:24:33
   .inst              (_simulate_inst),
   .GPR               (GPR),
   .unknown_inst_flag(_inst_decode_unit_io_ID_unknown_inst)
);

module sim(input[63:0] IF_pc, input [63:0] GPR [31:0], input unknown_inst_flag, output [63:0] inst);

   initial begin
      if ($test$plusargs("trace") != 0) begin
         $display("[%0t] Tracing to logs/vlt_dump.vcd...\n", $time);
         $dumpfile("logs/vlt_dump.vcd");
         $dumpvars();
      end
      $display("[%0t] Model running...\n", $time);
   end

   initial set_gpr_ptr(GPR);    // rf为通用寄存器的二维数组变量


   always@(*) begin
         dci_pmem_read(IF_pc, inst, 8'HFF);
   end

  always@(*) begin
      reg [63:0] i = GPR[10][63:0];
      if(unknown_inst_flag) unknown_inst();
      if(inst[31:0] == 32'h00100073) begin
        ebreak(i);
        $finish();
      end
  end

endmodule

// ----- 8< ----- FILE "firrtl_black_box_resource_files.f" ----- 8< -----

build/build/LSU.v
build/build/sim.v
